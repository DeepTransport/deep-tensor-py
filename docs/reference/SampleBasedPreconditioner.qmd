# SampleBasedPreconditioner { #deep_tensor.SampleBasedPreconditioner }

```python
SampleBasedPreconditioner(
    self,
    samples: Tensor,
    reference: GaussianReference | None = None,
    perturb_eigvals: bool = False,
    inflation: Tensor | None = None,
)
```

An approximate linear coupling between the reference and target densities.

Builds an approximate linear coupling between the unit Gaussian 
density and the joint density of the parameters and observations, 
using a set of samples. 

## Parameters {.doc-section .doc-section-parameters}

<code>[**samples**]{.parameter-name} [:]{.parameter-annotation-sep} [[Tensor](`torch.Tensor`)]{.parameter-annotation}</code>

:   An $n \times d$ matrix containing a set of samples from the  target density.

<code>[**reference**]{.parameter-name} [:]{.parameter-annotation-sep} [[GaussianReference](`deep_tensor.references.GaussianReference`) \| None]{.parameter-annotation} [ = ]{.parameter-default-sep} [None]{.parameter-default}</code>

:   The reference density. This must be a Gaussian density.

<code>[**perturb_eigvals**]{.parameter-name} [:]{.parameter-annotation-sep} [[bool](`bool`)]{.parameter-annotation} [ = ]{.parameter-default-sep} [False]{.parameter-default}</code>

:   If this is set to True, the diagonal of the sample covariance  matrix will be multiplied by a number slightly greater than 1.  This will ensure it is positive definite.

<code>[**inflation**]{.parameter-name} [:]{.parameter-annotation-sep} [[Tensor](`torch.Tensor`) \| None]{.parameter-annotation} [ = ]{.parameter-default-sep} [None]{.parameter-default}</code>

:   TODO: write this.